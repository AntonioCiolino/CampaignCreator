/* LLMSelectionDialog.css */

/* Styles for the backdrop */
.llm-selection-dialog-backdrop {
  /* Assuming we want it to seem contained,
     it might not need to be a full viewport backdrop anymore.
     If it was previously position:fixed, this changes it. */
  position: absolute; /* Key change */
  top: 0;
  left: 0;
  width: 100%; /* Cover its relative parent */
  height: 100%; /* Cover its relative parent */
  background-color: rgba(0, 0, 0, 0.3); /* Dimmed backdrop, less intrusive */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999; /* Lower than a typical global modal, but above tab content */
}

/* Styles for the dialog content box */
.llm-selection-dialog-content {
  background-color: var(--background-color, #fff); /* Use theme variable */
  padding: calc(var(--global-spacing-unit, 1rem) * 1.5);
  border-radius: 8px; /* Standard border radius */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15); /* Softer shadow */
  min-width: 300px; /* Minimum width */
  max-width: 500px; /* Maximum width */
  width: 90%; /* Responsive width */
  z-index: 1000; /* Above its own backdrop */
  /* Removed fixed positioning and transform centering.
     It will now be centered by the backdrop's flex properties
     relative to its containing block if the backdrop covers that block.
     If backdrop is smaller, content is just at top/left of backdrop. */
}

/* Existing styles below */

/* Assuming this styles content *within* an MUI Dialog.
   Backdrop, dialog panel, and DialogActions styling are primarily handled by MUI. */

/* Styles for the content specifically within LLMSelectionDialog */
/* If DialogTitle is used, its typography can be set via MUI's theme or sx prop.
   This h2 style is if a custom title element is used. */
.llm-selection-dialog-content h2 { /* Or a more specific class for the title */
  margin-top: 0;
  margin-bottom: var(--global-spacing-unit, 1rem);
  font-size: 1.5rem; /* Standard dialog title size */
  color: var(--text-color, #333);
  font-weight: 500;
}

/* Styling for the select component or a wrapper around it if needed */
.llm-selector-in-dialog {
  margin-bottom: var(--global-spacing-unit, 1rem);
  /* If using MUI Select, it will mostly adhere to theme.
     Custom styling for width or specific appearance can go here. */
}

.llm-selector-in-dialog .MuiFormControl-root { /* Example if targeting MUI's FormControl */
  width: 100%;
}


/* DialogActions are styled by MUI. If custom buttons are placed outside DialogActions,
   or if overriding MUI Button styles specifically here: */
.llm-selection-dialog-actions {
  /* MUI DialogActions already handles flex and spacing.
     This class might be redundant if DialogActions is used. */
  /* display: flex;
  justify-content: flex-end;
  gap: calc(var(--global-spacing-unit, 1rem) * 0.5);
  margin-top: var(--global-spacing-unit, 1rem); */
}

/* Custom styling for buttons if NOT using MUI Buttons or need heavy overrides.
   It's generally better to use MUI Buttons and style them via `variant`, `color`, or `sx` prop. */
.dialog-button { /* Generic class for any custom buttons */
  padding: calc(var(--global-spacing-unit, 1rem) * 0.5) var(--global-spacing-unit, 1rem);
  border: 1px solid transparent; /* Default transparent border */
  border-radius: 4px; /* Consistent radius */
  cursor: pointer;
  font-size: 0.95rem;
  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
  text-transform: none; /* MUI buttons are uppercase by default, this normalizes if custom */
}

.select-button { /* For the main action button */
  background-color: var(--primary-color, #007bff);
  color: #ffffff;
  border-color: var(--primary-color, #007bff);
}

.select-button:hover {
  background-color: var(--primary-color-dark, #0056b3);
  border-color: var(--primary-color-dark, #0056b3);
}

.cancel-button { /* For a secondary/cancel action */
  background-color: var(--surface-color, #fff);
  color: var(--text-color-muted, #6c757d);
  border-color: var(--border-color, #dee2e6);
}

.cancel-button:hover {
  background-color: var(--background-color, #f8f9fa); /* Light hover */
  border-color: var(--border-color, #dee2e6);
}
